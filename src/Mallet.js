/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { RigidBody } from '@react-three/rapier'
import { useController } from '@react-three/xr'
import { useFrame } from '@react-three/fiber'
import { Vector3 } from 'three'

export default function Model({ ...props }) {
  const group = useRef()
  const { nodes, materials } = useGLTF('/mallet.gltf')
  const malletAPI = useRef(null)
  const controller = useController(props.hand)

  useFrame(()=>{
    if (controller) {
      malletAPI.current.setNextKinematicTranslation({
        x: controller.controller.position.x,
        y: controller.controller.position.y,
        z: controller.controller.position.z
      })  ;
      malletAPI.current.setNextKinematicRotation({
        x: controller.controller.rotation.x,
        y: controller.controller.rotation.y,
        z: controller.controller.rotation.z
      }) 
    }
  })

  return (
    <group ref={group} {...props} dispose={null}>
      <RigidBody 
        type="kinematicPosition" 
        colliders="hull" 
        ref={malletAPI}
        ccd={true}
      >
        <mesh geometry={nodes.xylophone4.geometry} material={materials.xylophone} />
      </RigidBody>
    </group>
  )
}

useGLTF.preload('/mallet.gltf')
