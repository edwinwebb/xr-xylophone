/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { RigidBody } from '@react-three/rapier'
import { useController } from '@react-three/xr'
import { useFrame } from '@react-three/fiber'
import { Vector3 } from 'three'

export default function Model({ ...props }) {
  const group = useRef()
  const { nodes, materials } = useGLTF('/mallet.gltf')
  const malletAPI = useRef(null)
  const controller = useController('right')

  useFrame(()=>{
    if (controller) {
      malletAPI.current.setTranslation(new Vector3(
        controller.controller.position.x,
        controller.controller.position.y,
        controller.controller.position.z
      ))
      malletAPI.current.setRotation(new Vector3(
        controller.controller.rotation.x,
        controller.controller.rotation.y,
        controller.controller.rotation.z
      ))
    }
  })

  return (
    <group ref={group} {...props} dispose={null}>
      <RigidBody type="fixed" colliders="trimesh" ref={malletAPI}
        onCollisionEnter={()=>{
          console.log('mallet collision')
        }}
      >
        <mesh geometry={nodes.xylophone4.geometry} material={materials.xylophone} />
      </RigidBody>
    </group>
  )
}

useGLTF.preload('/mallet.gltf')
